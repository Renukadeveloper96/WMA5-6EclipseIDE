2023-11-11T15:59:16.956+0530 INFO HV000001: Hibernate Validator 6.2.5.Final
2023-11-11T15:59:16.960+0530 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-11-11T15:59:16.960+0530 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-11-11T15:59:16.961+0530 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-11-11T15:59:16.961+0530 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-11-11T15:59:16.963+0530 DEBUG Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-11-11T15:59:16.963+0530 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-11-11T15:59:16.974+0530 DEBUG Loaded expression factory via original TCCL
2023-11-11T15:59:17.018+0530 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-11-11T15:59:17.021+0530 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-11-11T15:59:17.021+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-11-11T15:59:17.021+0530 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-11-11T15:59:17.021+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-11-11T15:59:17.021+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-11-11T15:59:17.895+0530 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@2aae9190

	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/upendrarai/work/freelance-work/theminton/api/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.minton.userservice.entities.Contact
		com.minton.userservice.entities.Group
		com.minton.userservice.entities.GroupContacts
		com.minton.userservice.entities.Role
		com.minton.userservice.entities.User
		com.minton.userservice.entities.UserType]
	Mapping files names []
	Properties []
2023-11-11T15:59:17.899+0530 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-11-11T15:59:17.900+0530 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-11-11T15:59:17.900+0530 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-11T15:59:17.915+0530 INFO HHH000412: Hibernate ORM core version 5.6.11.Final
2023-11-11T15:59:17.916+0530 DEBUG HHH000206: hibernate.properties not found
2023-11-11T15:59:17.970+0530 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-11-11T15:59:17.974+0530 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-11T15:59:17.974+0530 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-11T15:59:17.979+0530 INFO HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@627acb38
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@22cd8ec2
2023-11-11T15:59:17.990+0530 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@38667005
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@40538370
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@40538370
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40538370
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@340c57e0
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@340c57e0
2023-11-11T15:59:17.991+0530 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@340c57e0
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration short -> org.hibernate.type.ShortType@14201a90
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration short -> org.hibernate.type.ShortType@14201a90
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14201a90
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@10a0d93a
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@10a0d93a
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10a0d93a
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration long -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration long -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:17.992+0530 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7573c7b5
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7573c7b5
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7573c7b5
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1da53f4f
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1da53f4f
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1da53f4f
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3a54638b
2023-11-11T15:59:17.993+0530 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3a54638b
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c8f047a
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c8f047a
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration string -> org.hibernate.type.StringType@7cdc4070
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7cdc4070
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1218e12
2023-11-11T15:59:17.994+0530 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26c59348
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration url -> org.hibernate.type.UrlType@1c0e4262
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@1c0e4262
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@716ae973
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@716ae973
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@34e25492
2023-11-11T15:59:17.995+0530 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34e25492
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5909ae90
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5909ae90
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5abbb273
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5abbb273
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6533629
2023-11-11T15:59:17.996+0530 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6533629
2023-11-11T15:59:17.997+0530 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@23df7fad
2023-11-11T15:59:17.997+0530 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@23df7fad
2023-11-11T15:59:17.997+0530 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b7ab7ab
2023-11-11T15:59:17.997+0530 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b7ab7ab
2023-11-11T15:59:17.998+0530 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90752
2023-11-11T15:59:17.998+0530 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90752
2023-11-11T15:59:17.998+0530 DEBUG Adding type registration date -> org.hibernate.type.DateType@49e0b123
2023-11-11T15:59:17.998+0530 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@49e0b123
2023-11-11T15:59:17.999+0530 DEBUG Adding type registration time -> org.hibernate.type.TimeType@592cb470
2023-11-11T15:59:17.999+0530 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@592cb470
2023-11-11T15:59:17.999+0530 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@22ae32ba
2023-11-11T15:59:17.999+0530 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22ae32ba
2023-11-11T15:59:17.999+0530 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22ae32ba
2023-11-11T15:59:18.000+0530 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fa5c8cf
2023-11-11T15:59:18.000+0530 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@3c7d8a4
2023-11-11T15:59:18.000+0530 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c7d8a4
2023-11-11T15:59:18.000+0530 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c7d8a4
2023-11-11T15:59:18.000+0530 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d4ecdb0
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@55d99dc3
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7d18338b
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d18338b
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@59f76e56
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f76e56
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@42503099
2023-11-11T15:59:18.001+0530 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42503099
2023-11-11T15:59:18.002+0530 DEBUG Adding type registration class -> org.hibernate.type.ClassType@77856cc5
2023-11-11T15:59:18.002+0530 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77856cc5
2023-11-11T15:59:18.002+0530 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23c05889
2023-11-11T15:59:18.002+0530 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23c05889
2023-11-11T15:59:18.002+0530 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@aee05f4
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2b2b7e3c
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2b2b7e3c
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2b2b7e3c
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b030101
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b030101
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b030101
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@1a3b1f7e
2023-11-11T15:59:18.003+0530 DEBUG Adding type registration image -> org.hibernate.type.ImageType@dbc7e0a
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@5ddd84d2
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@5ddd84d2
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@5ddd84d2
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62b786dc
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62b786dc
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62b786dc
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration text -> org.hibernate.type.TextType@7c31e410
2023-11-11T15:59:18.004+0530 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@4e8afdad
2023-11-11T15:59:18.005+0530 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@173a5fad
2023-11-11T15:59:18.005+0530 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@173a5fad
2023-11-11T15:59:18.005+0530 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fc0e448
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@7c0e4e4e
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c0e4e4e
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@f3876ef
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f3876ef
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c8d45cf
2023-11-11T15:59:18.006+0530 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c58d7be
2023-11-11T15:59:18.007+0530 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3eee08f5
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@ce2eaa7
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ce2eaa7
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6814262d
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fc1fd31
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75a9cc24
2023-11-11T15:59:18.008+0530 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4449a60b
2023-11-11T15:59:18.009+0530 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@da5d5e1
2023-11-11T15:59:18.009+0530 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d7d8911
2023-11-11T15:59:18.009+0530 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@460eb276
2023-11-11T15:59:18.009+0530 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ffe3d42
2023-11-11T15:59:18.013+0530 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5341641d] into BootstrapContext; was [null]
2023-11-11T15:59:18.013+0530 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5341641d) [was null]
2023-11-11T15:59:18.014+0530 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4fd37449] into BootstrapContext; was [null]
2023-11-11T15:59:18.014+0530 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5402612e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@43445fc6]
2023-11-11T15:59:18.018+0530 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5341641d]
2023-11-11T15:59:18.018+0530 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5341641d]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-11T15:59:18.023+0530 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-11T15:59:18.024+0530 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-11T15:59:18.024+0530 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-11-11T15:59:18.024+0530 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-11T15:59:18.025+0530 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-11T15:59:18.025+0530 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-11-11T15:59:18.025+0530 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-11T15:59:18.025+0530 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-11T15:59:18.115+0530 DEBUG Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2023-11-11T15:59:18.115+0530 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
2023-11-11T15:59:18.115+0530 DEBUG JDBC version : 4.2
2023-11-11T15:59:18.119+0530 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-11-11T15:59:18.124+0530 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-11T15:59:18.124+0530 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-11T15:59:18.131+0530 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77d959f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11c999da]
2023-11-11T15:59:18.144+0530 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-11T15:59:18.149+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.Contact
2023-11-11T15:59:18.155+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.156+0530 DEBUG Import with entity name Contact
2023-11-11T15:59:18.157+0530 DEBUG Bind entity com.minton.userservice.entities.Contact on table contact
2023-11-11T15:59:18.164+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=id, insertable=true, updatable=true, unique=true}
2023-11-11T15:59:18.165+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Contact] is safe
2023-11-11T15:59:18.166+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Contact
2023-11-11T15:59:18.166+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.167+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:id]
2023-11-11T15:59:18.167+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.168+0530 DEBUG Building property id
2023-11-11T15:59:18.169+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.169+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=city, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.169+0530 DEBUG MetadataSourceProcessor property city with lazy=false
2023-11-11T15:59:18.169+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:city]
2023-11-11T15:59:18.169+0530 DEBUG building SimpleValue for city
2023-11-11T15:59:18.169+0530 DEBUG Building property city
2023-11-11T15:59:18.170+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=contact_number, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.170+0530 DEBUG MetadataSourceProcessor property contactNumber with lazy=false
2023-11-11T15:59:18.170+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:contactNumber]
2023-11-11T15:59:18.170+0530 DEBUG building SimpleValue for contactNumber
2023-11-11T15:59:18.170+0530 DEBUG Building property contactNumber
2023-11-11T15:59:18.170+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=country, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.170+0530 DEBUG MetadataSourceProcessor property country with lazy=false
2023-11-11T15:59:18.170+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:country]
2023-11-11T15:59:18.170+0530 DEBUG building SimpleValue for country
2023-11-11T15:59:18.170+0530 DEBUG Building property country
2023-11-11T15:59:18.170+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=course_date, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.170+0530 DEBUG MetadataSourceProcessor property courseDate with lazy=false
2023-11-11T15:59:18.170+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:courseDate]
2023-11-11T15:59:18.170+0530 DEBUG building SimpleValue for courseDate
2023-11-11T15:59:18.170+0530 DEBUG Building property courseDate
2023-11-11T15:59:18.170+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=course_name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.170+0530 DEBUG MetadataSourceProcessor property courseName with lazy=false
2023-11-11T15:59:18.170+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:courseName]
2023-11-11T15:59:18.170+0530 DEBUG building SimpleValue for courseName
2023-11-11T15:59:18.170+0530 DEBUG Building property courseName
2023-11-11T15:59:18.170+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.170+0530 DEBUG MetadataSourceProcessor property createdAt with lazy=false
2023-11-11T15:59:18.170+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:createdAt]
2023-11-11T15:59:18.170+0530 DEBUG building SimpleValue for createdAt
2023-11-11T15:59:18.170+0530 DEBUG Building property createdAt
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=created_by, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property createdBy with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:createdBy]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for createdBy
2023-11-11T15:59:18.171+0530 DEBUG Building property createdBy
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=current_company, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property currentCompany with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:currentCompany]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for currentCompany
2023-11-11T15:59:18.171+0530 DEBUG Building property currentCompany
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=current_position, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property currentPosition with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:currentPosition]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for currentPosition
2023-11-11T15:59:18.171+0530 DEBUG Building property currentPosition
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property dob with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:dob]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for dob
2023-11-11T15:59:18.171+0530 DEBUG Building property dob
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=face_book_id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property faceBookId with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:faceBookId]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for faceBookId
2023-11-11T15:59:18.171+0530 DEBUG Building property faceBookId
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=field_of_interest, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property fieldOfInterest with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:fieldOfInterest]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for fieldOfInterest
2023-11-11T15:59:18.171+0530 DEBUG Building property fieldOfInterest
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property firstName with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:firstName]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for firstName
2023-11-11T15:59:18.171+0530 DEBUG Building property firstName
2023-11-11T15:59:18.171+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=instagram_id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.171+0530 DEBUG MetadataSourceProcessor property instagramId with lazy=false
2023-11-11T15:59:18.171+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:instagramId]
2023-11-11T15:59:18.171+0530 DEBUG building SimpleValue for instagramId
2023-11-11T15:59:18.171+0530 DEBUG Building property instagramId
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=is_active, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property isActive with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:isActive]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for isActive
2023-11-11T15:59:18.172+0530 DEBUG Building property isActive
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property lastName with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:lastName]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for lastName
2023-11-11T15:59:18.172+0530 DEBUG Building property lastName
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=linked_in_id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property linkedInId with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:linkedInId]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for linkedInId
2023-11-11T15:59:18.172+0530 DEBUG Building property linkedInId
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=modified_at, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property modifiedAt with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:modifiedAt]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for modifiedAt
2023-11-11T15:59:18.172+0530 DEBUG Building property modifiedAt
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=modified_by, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property modifiedBy with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:modifiedBy]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for modifiedBy
2023-11-11T15:59:18.172+0530 DEBUG Building property modifiedBy
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=primary_email, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property primaryEmail with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:primaryEmail]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for primaryEmail
2023-11-11T15:59:18.172+0530 DEBUG Building property primaryEmail
2023-11-11T15:59:18.172+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=primary_number, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.172+0530 DEBUG MetadataSourceProcessor property primaryNumber with lazy=false
2023-11-11T15:59:18.172+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:primaryNumber]
2023-11-11T15:59:18.172+0530 DEBUG building SimpleValue for primaryNumber
2023-11-11T15:59:18.172+0530 DEBUG Building property primaryNumber
2023-11-11T15:59:18.173+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=secondary_email, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.173+0530 DEBUG MetadataSourceProcessor property secondaryEmail with lazy=false
2023-11-11T15:59:18.173+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:secondaryEmail]
2023-11-11T15:59:18.173+0530 DEBUG building SimpleValue for secondaryEmail
2023-11-11T15:59:18.173+0530 DEBUG Building property secondaryEmail
2023-11-11T15:59:18.173+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=secondary_number, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.173+0530 DEBUG MetadataSourceProcessor property secondaryNumber with lazy=false
2023-11-11T15:59:18.173+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:secondaryNumber]
2023-11-11T15:59:18.173+0530 DEBUG building SimpleValue for secondaryNumber
2023-11-11T15:59:18.173+0530 DEBUG Building property secondaryNumber
2023-11-11T15:59:18.173+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(contact), mappingColumn=state, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.173+0530 DEBUG MetadataSourceProcessor property state with lazy=false
2023-11-11T15:59:18.173+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Contact:state]
2023-11-11T15:59:18.173+0530 DEBUG building SimpleValue for state
2023-11-11T15:59:18.173+0530 DEBUG Building property state
2023-11-11T15:59:18.175+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.Group
2023-11-11T15:59:18.175+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.175+0530 DEBUG Import with entity name Group
2023-11-11T15:59:18.175+0530 DEBUG Bind entity com.minton.userservice.entities.Group on table groups_tbl
2023-11-11T15:59:18.176+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.176+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Group] is safe
2023-11-11T15:59:18.176+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Group
2023-11-11T15:59:18.176+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.176+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:id]
2023-11-11T15:59:18.176+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.176+0530 DEBUG Building property id
2023-11-11T15:59:18.176+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.176+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=created_by, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.176+0530 DEBUG MetadataSourceProcessor property createdBy with lazy=false
2023-11-11T15:59:18.176+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:createdBy]
2023-11-11T15:59:18.176+0530 DEBUG building SimpleValue for createdBy
2023-11-11T15:59:18.176+0530 DEBUG Building property createdBy
2023-11-11T15:59:18.176+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=created_on, insertable=true, updatable=false, unique=false}
2023-11-11T15:59:18.176+0530 DEBUG MetadataSourceProcessor property createdOn with lazy=false
2023-11-11T15:59:18.176+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:createdOn]
2023-11-11T15:59:18.176+0530 DEBUG building SimpleValue for createdOn
2023-11-11T15:59:18.176+0530 DEBUG Building property createdOn
2023-11-11T15:59:18.178+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=group_name, insertable=true, updatable=true, unique=true}
2023-11-11T15:59:18.178+0530 DEBUG MetadataSourceProcessor property groupName with lazy=false
2023-11-11T15:59:18.178+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:groupName]
2023-11-11T15:59:18.178+0530 DEBUG building SimpleValue for groupName
2023-11-11T15:59:18.178+0530 DEBUG Building property groupName
2023-11-11T15:59:18.178+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=is_active, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.178+0530 DEBUG MetadataSourceProcessor property isActive with lazy=false
2023-11-11T15:59:18.178+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:isActive]
2023-11-11T15:59:18.178+0530 DEBUG building SimpleValue for isActive
2023-11-11T15:59:18.178+0530 DEBUG Building property isActive
2023-11-11T15:59:18.178+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=modified_at, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.178+0530 DEBUG MetadataSourceProcessor property modifiedAt with lazy=false
2023-11-11T15:59:18.178+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:modifiedAt]
2023-11-11T15:59:18.178+0530 DEBUG building SimpleValue for modifiedAt
2023-11-11T15:59:18.178+0530 DEBUG Building property modifiedAt
2023-11-11T15:59:18.178+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups_tbl), mappingColumn=modified_by, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.178+0530 DEBUG MetadataSourceProcessor property modifiedBy with lazy=false
2023-11-11T15:59:18.178+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Group:modifiedBy]
2023-11-11T15:59:18.178+0530 DEBUG building SimpleValue for modifiedBy
2023-11-11T15:59:18.178+0530 DEBUG Building property modifiedBy
2023-11-11T15:59:18.179+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.GroupContacts
2023-11-11T15:59:18.179+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.179+0530 DEBUG Import with entity name GroupContacts
2023-11-11T15:59:18.179+0530 DEBUG Bind entity com.minton.userservice.entities.GroupContacts on table group_contacts
2023-11-11T15:59:18.180+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(group_contacts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.180+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.GroupContacts] is safe
2023-11-11T15:59:18.180+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.GroupContacts
2023-11-11T15:59:18.180+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.180+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.GroupContacts:id]
2023-11-11T15:59:18.180+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.180+0530 DEBUG Building property id
2023-11-11T15:59:18.180+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.180+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2023-11-11T15:59:18.180+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(group_contacts), mappingColumn=contacts, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.181+0530 DEBUG Building property contacts
2023-11-11T15:59:18.181+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2023-11-11T15:59:18.181+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(group_contacts), mappingColumn=group, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.181+0530 DEBUG Building property group
2023-11-11T15:59:18.181+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.Role
2023-11-11T15:59:18.181+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.181+0530 DEBUG Import with entity name Role
2023-11-11T15:59:18.181+0530 DEBUG Bind entity com.minton.userservice.entities.Role on table role
2023-11-11T15:59:18.182+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.182+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Role] is safe
2023-11-11T15:59:18.182+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Role
2023-11-11T15:59:18.182+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.182+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:id]
2023-11-11T15:59:18.182+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.182+0530 DEBUG Building property id
2023-11-11T15:59:18.182+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.182+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=created_on, insertable=true, updatable=false, unique=false}
2023-11-11T15:59:18.182+0530 DEBUG MetadataSourceProcessor property createdOn with lazy=false
2023-11-11T15:59:18.182+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:createdOn]
2023-11-11T15:59:18.182+0530 DEBUG building SimpleValue for createdOn
2023-11-11T15:59:18.182+0530 DEBUG Building property createdOn
2023-11-11T15:59:18.182+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=description, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.182+0530 DEBUG MetadataSourceProcessor property description with lazy=false
2023-11-11T15:59:18.183+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:description]
2023-11-11T15:59:18.183+0530 DEBUG building SimpleValue for description
2023-11-11T15:59:18.183+0530 DEBUG Building property description
2023-11-11T15:59:18.183+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=is_active, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.183+0530 DEBUG MetadataSourceProcessor property isActive with lazy=false
2023-11-11T15:59:18.183+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:isActive]
2023-11-11T15:59:18.183+0530 DEBUG building SimpleValue for isActive
2023-11-11T15:59:18.183+0530 DEBUG Building property isActive
2023-11-11T15:59:18.183+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=true}
2023-11-11T15:59:18.183+0530 DEBUG MetadataSourceProcessor property name with lazy=false
2023-11-11T15:59:18.183+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:name]
2023-11-11T15:59:18.183+0530 DEBUG building SimpleValue for name
2023-11-11T15:59:18.183+0530 DEBUG Building property name
2023-11-11T15:59:18.183+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=updated_on, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.183+0530 DEBUG MetadataSourceProcessor property updatedOn with lazy=false
2023-11-11T15:59:18.183+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.Role:updatedOn]
2023-11-11T15:59:18.183+0530 DEBUG building SimpleValue for updatedOn
2023-11-11T15:59:18.183+0530 DEBUG Building property updatedOn
2023-11-11T15:59:18.183+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.User
2023-11-11T15:59:18.184+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.184+0530 DEBUG Import with entity name User
2023-11-11T15:59:18.184+0530 DEBUG Bind entity com.minton.userservice.entities.User on table users
2023-11-11T15:59:18.187+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.187+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.User] is safe
2023-11-11T15:59:18.187+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.User
2023-11-11T15:59:18.187+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.187+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:id]
2023-11-11T15:59:18.187+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.187+0530 DEBUG Building property id
2023-11-11T15:59:18.187+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.187+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=created_on, insertable=true, updatable=false, unique=false}
2023-11-11T15:59:18.187+0530 DEBUG MetadataSourceProcessor property createdOn with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:createdOn]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for createdOn
2023-11-11T15:59:18.188+0530 DEBUG Building property createdOn
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=delete_flag, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property deleteFlag with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:deleteFlag]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for deleteFlag
2023-11-11T15:59:18.188+0530 DEBUG Building property deleteFlag
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=deleted_on, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property deletedOn with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:deletedOn]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for deletedOn
2023-11-11T15:59:18.188+0530 DEBUG Building property deletedOn
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property email with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:email]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for email
2023-11-11T15:59:18.188+0530 DEBUG Building property email
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email_verified, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property emailVerified with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:emailVerified]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for emailVerified
2023-11-11T15:59:18.188+0530 DEBUG Building property emailVerified
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property firstName with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:firstName]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for firstName
2023-11-11T15:59:18.188+0530 DEBUG Building property firstName
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property imageUrl with lazy=false
2023-11-11T15:59:18.188+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:imageUrl]
2023-11-11T15:59:18.188+0530 DEBUG building SimpleValue for imageUrl
2023-11-11T15:59:18.188+0530 DEBUG Building property imageUrl
2023-11-11T15:59:18.188+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=is_active, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.188+0530 DEBUG MetadataSourceProcessor property isActive with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:isActive]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for isActive
2023-11-11T15:59:18.189+0530 DEBUG Building property isActive
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=is_authenticated_from_social_media, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property isAuthenticatedFromSocialMedia with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:isAuthenticatedFromSocialMedia]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for isAuthenticatedFromSocialMedia
2023-11-11T15:59:18.189+0530 DEBUG Building property isAuthenticatedFromSocialMedia
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property lastName with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:lastName]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for lastName
2023-11-11T15:59:18.189+0530 DEBUG Building property lastName
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=media_meta_data, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property mediaMetaData with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:mediaMetaData]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for mediaMetaData
2023-11-11T15:59:18.189+0530 DEBUG Building property mediaMetaData
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property name with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:name]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for name
2023-11-11T15:59:18.189+0530 DEBUG Building property name
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property password with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:password]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for password
2023-11-11T15:59:18.189+0530 DEBUG Building property password
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property phoneNumber with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:phoneNumber]
2023-11-11T15:59:18.189+0530 DEBUG building SimpleValue for phoneNumber
2023-11-11T15:59:18.189+0530 DEBUG Building property phoneNumber
2023-11-11T15:59:18.189+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=provider, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.189+0530 DEBUG MetadataSourceProcessor property provider with lazy=false
2023-11-11T15:59:18.189+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:provider]
2023-11-11T15:59:18.190+0530 DEBUG building SimpleValue for provider
2023-11-11T15:59:18.190+0530 DEBUG Building property provider
2023-11-11T15:59:18.190+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=provider_id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.190+0530 DEBUG MetadataSourceProcessor property providerId with lazy=false
2023-11-11T15:59:18.190+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:providerId]
2023-11-11T15:59:18.190+0530 DEBUG building SimpleValue for providerId
2023-11-11T15:59:18.190+0530 DEBUG Building property providerId
2023-11-11T15:59:18.191+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.194+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.194+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.194+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2023-11-11T15:59:18.194+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2023-11-11T15:59:18.194+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2023-11-11T15:59:18.194+0530 DEBUG Collection role: com.minton.userservice.entities.User.roles
2023-11-11T15:59:18.195+0530 DEBUG Building property roles
2023-11-11T15:59:18.195+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=updated_on, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.195+0530 DEBUG MetadataSourceProcessor property updatedOn with lazy=false
2023-11-11T15:59:18.195+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.User:updatedOn]
2023-11-11T15:59:18.195+0530 DEBUG building SimpleValue for updatedOn
2023-11-11T15:59:18.195+0530 DEBUG Building property updatedOn
2023-11-11T15:59:18.195+0530 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='userType', referencedColumn='id', mappedBy=''}
2023-11-11T15:59:18.195+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_type, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.195+0530 DEBUG Building property userType
2023-11-11T15:59:18.196+0530 DEBUG Binding entity from annotated class: com.minton.userservice.entities.UserType
2023-11-11T15:59:18.196+0530 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-11-11T15:59:18.196+0530 DEBUG Import with entity name UserType
2023-11-11T15:59:18.196+0530 DEBUG Bind entity com.minton.userservice.entities.UserType on table user_type
2023-11-11T15:59:18.196+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.196+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.UserType] is safe
2023-11-11T15:59:18.196+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.UserType
2023-11-11T15:59:18.196+0530 DEBUG MetadataSourceProcessor property id with lazy=false
2023-11-11T15:59:18.196+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:id]
2023-11-11T15:59:18.196+0530 DEBUG building SimpleValue for id
2023-11-11T15:59:18.196+0530 DEBUG Building property id
2023-11-11T15:59:18.196+0530 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2023-11-11T15:59:18.196+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=created_on, insertable=true, updatable=false, unique=false}
2023-11-11T15:59:18.196+0530 DEBUG MetadataSourceProcessor property createdOn with lazy=false
2023-11-11T15:59:18.196+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:createdOn]
2023-11-11T15:59:18.196+0530 DEBUG building SimpleValue for createdOn
2023-11-11T15:59:18.196+0530 DEBUG Building property createdOn
2023-11-11T15:59:18.196+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=delete_flag, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.196+0530 DEBUG MetadataSourceProcessor property deleteFlag with lazy=false
2023-11-11T15:59:18.196+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:deleteFlag]
2023-11-11T15:59:18.196+0530 DEBUG building SimpleValue for deleteFlag
2023-11-11T15:59:18.196+0530 DEBUG Building property deleteFlag
2023-11-11T15:59:18.196+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=deleted_on, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.196+0530 DEBUG MetadataSourceProcessor property deletedOn with lazy=false
2023-11-11T15:59:18.196+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:deletedOn]
2023-11-11T15:59:18.196+0530 DEBUG building SimpleValue for deletedOn
2023-11-11T15:59:18.197+0530 DEBUG Building property deletedOn
2023-11-11T15:59:18.197+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.197+0530 DEBUG MetadataSourceProcessor property name with lazy=false
2023-11-11T15:59:18.197+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:name]
2023-11-11T15:59:18.197+0530 DEBUG building SimpleValue for name
2023-11-11T15:59:18.197+0530 DEBUG Building property name
2023-11-11T15:59:18.197+0530 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_type), mappingColumn=updated_on, insertable=true, updatable=true, unique=false}
2023-11-11T15:59:18.197+0530 DEBUG MetadataSourceProcessor property updatedOn with lazy=false
2023-11-11T15:59:18.197+0530 DEBUG Attempting to locate auto-apply AttributeConverter for property [com.minton.userservice.entities.UserType:updatedOn]
2023-11-11T15:59:18.197+0530 DEBUG building SimpleValue for updatedOn
2023-11-11T15:59:18.197+0530 DEBUG Building property updatedOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for city
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for contactNumber
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for country
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for courseDate
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for courseName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdAt
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdBy
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for currentCompany
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for currentPosition
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for dob
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for faceBookId
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for fieldOfInterest
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for firstName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for instagramId
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for isActive
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for lastName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for linkedInId
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for modifiedAt
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for modifiedBy
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for primaryEmail
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for primaryNumber
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for secondaryEmail
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for secondaryNumber
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for state
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdBy
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for groupName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for isActive
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for modifiedAt
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for modifiedBy
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for description
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for isActive
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for name
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for updatedOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for deleteFlag
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for deletedOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for email
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for emailVerified
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for firstName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for imageUrl
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for isActive
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for isAuthenticatedFromSocialMedia
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for lastName
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for mediaMetaData
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for name
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for password
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for phoneNumber
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for provider
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for providerId
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for updatedOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for id
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for createdOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for deleteFlag
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for deletedOn
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for name
2023-11-11T15:59:18.198+0530 DEBUG Starting fillSimpleValue for updatedOn
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [contact]
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [groups_tbl]
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [group_contacts]
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [role]
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-11-11T15:59:18.200+0530 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user_type]
2023-11-11T15:59:18.200+0530 DEBUG Second pass for collection: com.minton.userservice.entities.User.roles
2023-11-11T15:59:18.200+0530 DEBUG Binding as ManyToMany: com.minton.userservice.entities.User.roles
2023-11-11T15:59:18.201+0530 DEBUG Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
2023-11-11T15:59:18.201+0530 DEBUG Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
2023-11-11T15:59:18.201+0530 DEBUG Mapped collection key: user_id, element: role_id
2023-11-11T15:59:18.201+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Contact
2023-11-11T15:59:18.202+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Group
2023-11-11T15:59:18.202+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Role
2023-11-11T15:59:18.202+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.User
2023-11-11T15:59:18.202+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.UserType
2023-11-11T15:59:18.203+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Contact
2023-11-11T15:59:18.203+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Group
2023-11-11T15:59:18.203+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.Role
2023-11-11T15:59:18.203+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.User
2023-11-11T15:59:18.203+0530 DEBUG Resolving reference to class: com.minton.userservice.entities.UserType
2023-11-11T15:59:18.216+0530 DEBUG Building session factory
2023-11-11T15:59:18.217+0530 DEBUG SessionFactory name : null
2023-11-11T15:59:18.217+0530 DEBUG Automatic flush during beforeCompletion(): enabled
2023-11-11T15:59:18.217+0530 DEBUG Automatic session close at end of transaction: disabled
2023-11-11T15:59:18.217+0530 DEBUG Statistics: disabled
2023-11-11T15:59:18.217+0530 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-11-11T15:59:18.217+0530 DEBUG Default entity-mode: pojo
2023-11-11T15:59:18.217+0530 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-11-11T15:59:18.217+0530 DEBUG Allow initialization of lazy state outside session : disabled
2023-11-11T15:59:18.217+0530 DEBUG Using BatchFetchStyle : LEGACY
2023-11-11T15:59:18.217+0530 DEBUG Default batch fetch size: -1
2023-11-11T15:59:18.217+0530 DEBUG Maximum outer join fetch depth: 2
2023-11-11T15:59:18.217+0530 DEBUG Default null ordering: NONE
2023-11-11T15:59:18.217+0530 DEBUG Order SQL updates by primary key: disabled
2023-11-11T15:59:18.217+0530 DEBUG Order SQL inserts for batching: disabled
2023-11-11T15:59:18.217+0530 DEBUG multi-tenancy strategy : NONE
2023-11-11T15:59:18.217+0530 DEBUG JTA Track by Thread: enabled
2023-11-11T15:59:18.217+0530 DEBUG Query language substitutions: {}
2023-11-11T15:59:18.217+0530 DEBUG Named query checking : enabled
2023-11-11T15:59:18.217+0530 DEBUG Second-level cache: disabled
2023-11-11T15:59:18.217+0530 DEBUG Second-level query cache: disabled
2023-11-11T15:59:18.217+0530 DEBUG Second-level query cache factory: null
2023-11-11T15:59:18.217+0530 DEBUG Second-level cache region prefix: null
2023-11-11T15:59:18.217+0530 DEBUG Optimize second-level cache for minimal puts: disabled
2023-11-11T15:59:18.217+0530 DEBUG Structured second-level cache entries: disabled
2023-11-11T15:59:18.217+0530 DEBUG Second-level cache direct-reference entries: disabled
2023-11-11T15:59:18.217+0530 DEBUG Automatic eviction of collection cache: disabled
2023-11-11T15:59:18.217+0530 DEBUG JDBC batch size: 15
2023-11-11T15:59:18.217+0530 DEBUG JDBC batch updates for versioned data: enabled
2023-11-11T15:59:18.217+0530 DEBUG Scrollable result sets: enabled
2023-11-11T15:59:18.217+0530 DEBUG Wrap result sets: disabled
2023-11-11T15:59:18.217+0530 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-11-11T15:59:18.217+0530 DEBUG JDBC result set fetch size: null
2023-11-11T15:59:18.217+0530 DEBUG Connection release mode: ON_CLOSE
2023-11-11T15:59:18.217+0530 DEBUG Generate SQL with comments: disabled
2023-11-11T15:59:18.217+0530 DEBUG JPA compliance - query : disabled
2023-11-11T15:59:18.217+0530 DEBUG JPA compliance - closed-handling : disabled
2023-11-11T15:59:18.217+0530 DEBUG JPA compliance - lists : disabled
2023-11-11T15:59:18.217+0530 DEBUG JPA compliance - transactions : disabled
2023-11-11T15:59:18.236+0530 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-11T15:59:18.237+0530 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-11T15:59:18.241+0530 DEBUG Session factory constructed with filter configurations : {}
2023-11-11T15:59:18.241+0530 DEBUG Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=17, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@116915f1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/upendrarai/work/freelance-work/theminton/api/target/classes:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.7.4/spring-boot-starter-data-jpa-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.4/spring-boot-starter-jdbc-2.7.4.jar:/Users/upendrarai/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-jdbc/5.3.23/spring-jdbc-5.3.23.jar:/Users/upendrarai/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/upendrarai/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/upendrarai/.m2/repository/org/hibernate/hibernate-core/5.6.11.Final/hibernate-core-5.6.11.Final.jar:/Users/upendrarai/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/upendrarai/.m2/repository/net/bytebuddy/byte-buddy/1.12.17/byte-buddy-1.12.17.jar:/Users/upendrarai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/upendrarai/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/upendrarai/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/upendrarai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/upendrarai/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6.jar:/Users/upendrarai/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/upendrarai/.m2/repository/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6.jar:/Users/upendrarai/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/upendrarai/.m2/repository/org/springframework/data/spring-data-jpa/2.7.3/spring-data-jpa-2.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/data/spring-data-commons/2.7.3/spring-data-commons-2.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-orm/5.3.23/spring-orm-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-context/5.3.23/spring-context-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-tx/5.3.23/spring-tx-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-beans/5.3.23/spring-beans-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-core/5.3.23/spring-core-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-jcl/5.3.23/spring-jcl-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-aspects/5.3.23/spring-aspects-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-oauth2-client/2.7.4/spring-boot-starter-oauth2-client-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.4/spring-boot-starter-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot/2.7.4/spring-boot-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.4/spring-boot-autoconfigure-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.4/spring-boot-starter-logging-2.7.4.jar:/Users/upendrarai/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/upendrarai/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/upendrarai/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/upendrarai/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/upendrarai/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/upendrarai/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/upendrarai/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-config/5.7.3/spring-security-config-5.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-core/5.7.3/spring-security-core-5.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-crypto/5.7.3/spring-security-crypto-5.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-expression/5.3.23/spring-expression-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-oauth2-client/5.7.3/spring-security-oauth2-client-5.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-oauth2-core/5.7.3/spring-security-oauth2-core-5.7.3.jar:/Users/upendrarai/.m2/repository/com/nimbusds/oauth2-oidc-sdk/9.35/oauth2-oidc-sdk-9.35.jar:/Users/upendrarai/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/Users/upendrarai/.m2/repository/com/nimbusds/content-type/2.2/content-type-2.2.jar:/Users/upendrarai/.m2/repository/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar:/Users/upendrarai/.m2/repository/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar:/Users/upendrarai/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/upendrarai/.m2/repository/com/nimbusds/lang-tag/1.6/lang-tag-1.6.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-oauth2-jose/5.7.3/spring-security-oauth2-jose-5.7.3.jar:/Users/upendrarai/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.22/nimbus-jose-jwt-9.22.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.4/spring-boot-starter-security-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-aop/5.3.23/spring-aop-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/security/spring-security-web/5.7.3/spring-security-web-5.7.3.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.4/spring-boot-starter-validation-2.7.4.jar:/Users/upendrarai/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.65/tomcat-embed-el-9.0.65.jar:/Users/upendrarai/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/upendrarai/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.4/spring-boot-starter-web-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.4/spring-boot-starter-json-2.7.4.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.4/jackson-datatype-jdk8-2.13.4.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.4/jackson-datatype-jsr310-2.13.4.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.4/jackson-module-parameter-names-2.13.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.4/spring-boot-starter-tomcat-2.7.4.jar:/Users/upendrarai/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.65/tomcat-embed-core-9.0.65.jar:/Users/upendrarai/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.65/tomcat-embed-websocket-9.0.65.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-web/5.3.23/spring-web-5.3.23.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-webmvc/5.3.23/spring-webmvc-5.3.23.jar:/Users/upendrarai/.m2/repository/com/mysql/mysql-connector-j/8.0.31/mysql-connector-j-8.0.31.jar:/Users/upendrarai/.m2/repository/org/projectlombok/lombok/1.18.26/lombok-1.18.26.jar:/Users/upendrarai/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/upendrarai/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.2/jjwt-api-0.11.2.jar:/Users/upendrarai/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.2/jjwt-impl-0.11.2.jar:/Users/upendrarai/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.2/jjwt-jackson-0.11.2.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.4/jackson-databind-2.13.4.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.4/jackson-annotations-2.13.4.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.4/jackson-core-2.13.4.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.4/spring-boot-starter-aop-2.7.4.jar:/Users/upendrarai/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/upendrarai/.m2/repository/org/springdoc/springdoc-openapi-ui/1.6.7/springdoc-openapi-ui-1.6.7.jar:/Users/upendrarai/.m2/repository/org/springdoc/springdoc-openapi-webmvc-core/1.6.7/springdoc-openapi-webmvc-core-1.6.7.jar:/Users/upendrarai/.m2/repository/org/springdoc/springdoc-openapi-common/1.6.7/springdoc-openapi-common-1.6.7.jar:/Users/upendrarai/.m2/repository/io/swagger/core/v3/swagger-core/2.2.0/swagger-core-2.2.0.jar:/Users/upendrarai/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.13.4/jackson-dataformat-yaml-2.13.4.jar:/Users/upendrarai/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.0/swagger-annotations-2.2.0.jar:/Users/upendrarai/.m2/repository/io/swagger/core/v3/swagger-models/2.2.0/swagger-models-2.2.0.jar:/Users/upendrarai/.m2/repository/org/webjars/swagger-ui/4.10.3/swagger-ui-4.10.3.jar:/Users/upendrarai/.m2/repository/org/webjars/webjars-locator-core/0.50/webjars-locator-core-0.50.jar:/Users/upendrarai/.m2/repository/io/github/classgraph/classgraph/4.8.143/classgraph-4.8.143.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.7.4/spring-boot-starter-mail-2.7.4.jar:/Users/upendrarai/.m2/repository/org/springframework/spring-context-support/5.3.23/spring-context-support-5.3.23.jar:/Users/upendrarai/.m2/repository/com/sun/mail/jakarta.mail/1.6.7/jakarta.mail-1.6.7.jar:/Users/upendrarai/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/upendrarai/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/upendrarai/.m2/repository/org/thymeleaf/thymeleaf/3.0.15.RELEASE/thymeleaf-3.0.15.RELEASE.jar:/Users/upendrarai/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/upendrarai/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/upendrarai/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/upendrarai/.m2/repository/org/springframework/boot/spring-boot-starter-freemarker/2.7.4/spring-boot-starter-freemarker-2.7.4.jar:/Users/upendrarai/.m2/repository/org/freemarker/freemarker/2.3.31/freemarker-2.3.31.jar:/Users/upendrarai/.m2/repository/org/modelmapper/modelmapper/3.1.1/modelmapper-3.1.1.jar:/Users/upendrarai/.m2/repository/com/opencsv/opencsv/5.3/opencsv-5.3.jar:/Users/upendrarai/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/Users/upendrarai/.m2/repository/org/apache/commons/commons-text/1.9/commons-text-1.9.jar:/Users/upendrarai/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/upendrarai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/upendrarai/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/upendrarai/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Mac OS X, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.8.v20230831-1047/jre/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.minton.userservice.UserManagementApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@27bbe773, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, spring.boot.project.name=user-service, user.home=/Users/upendrarai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-08-24, java.home=/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.8.v20230831-1047/jre, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.8.1+1, user.name=upendrarai, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=:, java.security.egd=file:/dev/./urandom, management.endpoints.jmx.exposure.include=*, os.version=12.5.1, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-17.0.8.1+1, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/yg/yc_bm4sj06jcyknfd9cssttc0000gn/T/, catalina.home=/private/var/folders/yg/yc_bm4sj06jcyknfd9cssttc0000gn/T/tomcat.8082.12936088179361325134, com.sun.management.jmxremote.port=51631, java.version=17.0.8.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/upendrarai/work/freelance-work/theminton/api, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, PID=7774, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/yg/yc_bm4sj06jcyknfd9cssttc0000gn/T/tomcat.8082.12936088179361325134, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@328e50eb, native.encoding=UTF-8, java.library.path=/Users/upendrarai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, emulated-client, java.vm.version=17.0.8.1+1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
2023-11-11T15:59:18.253+0530 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-11-11T15:59:18.253+0530 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-11-11T15:59:18.253+0530 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-11-11T15:59:18.253+0530 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-11-11T15:59:18.253+0530 DEBUG Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-11-11T15:59:18.253+0530 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-11-11T15:59:18.254+0530 DEBUG Loaded expression factory via original TCCL
2023-11-11T15:59:18.254+0530 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-11-11T15:59:18.255+0530 DEBUG HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-11-11T15:59:18.255+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-11-11T15:59:18.255+0530 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-11-11T15:59:18.255+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-11-11T15:59:18.255+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-11-11T15:59:18.255+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.UserType] is safe
2023-11-11T15:59:18.255+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.UserType
2023-11-11T15:59:18.272+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.User] is safe
2023-11-11T15:59:18.272+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.User
2023-11-11T15:59:18.281+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Group] is safe
2023-11-11T15:59:18.281+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Group
2023-11-11T15:59:18.282+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.GroupContacts] is safe
2023-11-11T15:59:18.282+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.GroupContacts
2023-11-11T15:59:18.283+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Contact] is safe
2023-11-11T15:59:18.283+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Contact
2023-11-11T15:59:18.285+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Role] is safe
2023-11-11T15:59:18.285+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Role
2023-11-11T15:59:18.287+0530 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-11T15:59:18.287+0530 DEBUG Skipping JACC integration as it was not enabled
2023-11-11T15:59:18.289+0530 DEBUG Using NAMED-based conversion for Enum com.minton.userservice.constants.AuthProvider
2023-11-11T15:59:18.289+0530 DEBUG Instantiated session factory
2023-11-11T15:59:18.289+0530 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77d959f1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@579ce2e9]
2023-11-11T15:59:18.308+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.UserType] is safe
2023-11-11T15:59:18.308+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.UserType
2023-11-11T15:59:18.377+0530 DEBUG To-one property `com.minton.userservice.entities.User#userType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.377+0530 DEBUG To-one property `com.minton.userservice.entities.User#userType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.377+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.User] is safe
2023-11-11T15:59:18.377+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.User
2023-11-11T15:59:18.390+0530 DEBUG To-one property `com.minton.userservice.entities.User#userType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.391+0530 DEBUG To-one property `com.minton.userservice.entities.User#userType` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.391+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Group] is safe
2023-11-11T15:59:18.391+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Group
2023-11-11T15:59:18.397+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#contacts` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.397+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#contacts` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.397+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.397+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.397+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.GroupContacts] is safe
2023-11-11T15:59:18.397+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.GroupContacts
2023-11-11T15:59:18.400+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#contacts` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.400+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.400+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#contacts` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.400+0530 DEBUG To-one property `com.minton.userservice.entities.GroupContacts#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-11T15:59:18.401+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Contact] is safe
2023-11-11T15:59:18.401+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Contact
2023-11-11T15:59:18.413+0530 DEBUG Not known whether passed class name [com.minton.userservice.entities.Role] is safe
2023-11-11T15:59:18.413+0530 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.minton.userservice.entities.Role
2023-11-11T15:59:18.421+0530 DEBUG Static SQL for collection: com.minton.userservice.entities.User.roles
2023-11-11T15:59:18.421+0530 DEBUG  Row insert: insert into user_role (user_id, role_id) values (?, ?)
2023-11-11T15:59:18.421+0530 DEBUG  Row update: update user_role set role_id=? where user_id=? and role_id=?
2023-11-11T15:59:18.421+0530 DEBUG  Row delete: delete from user_role where user_id=? and role_id=?
2023-11-11T15:59:18.421+0530 DEBUG  One-shot delete: delete from user_role where user_id=?
2023-11-11T15:59:18.422+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.UserType
2023-11-11T15:59:18.422+0530 DEBUG  Version select: select id from user_type where id =?
2023-11-11T15:59:18.422+0530 DEBUG  Snapshot select: select usertype_.id, usertype_.delete_flag as delete_f3_6_, usertype_.deleted_on as deleted_4_6_, usertype_.name as name5_6_, usertype_.updated_on as updated_6_6_ from user_type usertype_ where usertype_.id=?
2023-11-11T15:59:18.422+0530 DEBUG  Insert 0: insert into user_type (created_on, delete_flag, deleted_on, name, updated_on, id) values (?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.422+0530 DEBUG  Update 0: update user_type set delete_flag=?, deleted_on=?, name=?, updated_on=? where id=?
2023-11-11T15:59:18.422+0530 DEBUG  Delete 0: delete from user_type where id=?
2023-11-11T15:59:18.422+0530 DEBUG  Identity insert: insert into user_type (created_on, delete_flag, deleted_on, name, updated_on) values (?, ?, ?, ?, ?)
2023-11-11T15:59:18.434+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c46a957]
2023-11-11T15:59:18.435+0530 DEBUG Visiting attribute path : createdOn
2023-11-11T15:59:18.435+0530 DEBUG Visiting attribute path : deleteFlag
2023-11-11T15:59:18.435+0530 DEBUG Visiting attribute path : deletedOn
2023-11-11T15:59:18.435+0530 DEBUG Visiting attribute path : name
2023-11-11T15:59:18.435+0530 DEBUG Visiting attribute path : updatedOn
2023-11-11T15:59:18.435+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.439+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.440+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.UserType)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.UserType, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.UserType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.UserType)
          - SQL table alias mapping - usertype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

2023-11-11T15:59:18.440+0530 DEBUG Static select for entity com.minton.userservice.entities.UserType [NONE]: select usertype0_.id as id1_6_0_, usertype0_.created_on as created_2_6_0_, usertype0_.delete_flag as delete_f3_6_0_, usertype0_.deleted_on as deleted_4_6_0_, usertype0_.name as name5_6_0_, usertype0_.updated_on as updated_6_6_0_ from user_type usertype0_ where usertype0_.id=?
2023-11-11T15:59:18.441+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.User
2023-11-11T15:59:18.441+0530 DEBUG  Version select: select id from users where id =?
2023-11-11T15:59:18.441+0530 DEBUG  Snapshot select: select user_.id, user_.delete_flag as delete_f3_5_, user_.deleted_on as deleted_4_5_, user_.email as email5_5_, user_.email_verified as email_ve6_5_, user_.first_name as first_na7_5_, user_.image_url as image_ur8_5_, user_.is_active as is_activ9_5_, user_.is_authenticated_from_social_media as is_auth10_5_, user_.last_name as last_na11_5_, user_.media_meta_data as media_m12_5_, user_.name as name13_5_, user_.password as passwor14_5_, user_.phone_number as phone_n15_5_, user_.provider as provide16_5_, user_.provider_id as provide17_5_, user_.updated_on as updated18_5_, user_.user_type as user_ty19_5_ from users user_ where user_.id=?
2023-11-11T15:59:18.441+0530 DEBUG  Insert 0: insert into users (created_on, delete_flag, deleted_on, email, email_verified, first_name, image_url, is_active, is_authenticated_from_social_media, last_name, media_meta_data, name, password, phone_number, provider, provider_id, updated_on, user_type, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.441+0530 DEBUG  Update 0: update users set delete_flag=?, deleted_on=?, email=?, email_verified=?, first_name=?, image_url=?, is_active=?, is_authenticated_from_social_media=?, last_name=?, media_meta_data=?, name=?, password=?, phone_number=?, provider=?, provider_id=?, updated_on=?, user_type=? where id=?
2023-11-11T15:59:18.441+0530 DEBUG  Delete 0: delete from users where id=?
2023-11-11T15:59:18.441+0530 DEBUG  Identity insert: insert into users (created_on, delete_flag, deleted_on, email, email_verified, first_name, image_url, is_active, is_authenticated_from_social_media, last_name, media_meta_data, name, password, phone_number, provider, provider_id, updated_on, user_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.441+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec77cab]
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : createdOn
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : deleteFlag
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : deletedOn
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : email
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : emailVerified
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : firstName
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : imageUrl
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : isActive
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : isAuthenticatedFromSocialMedia
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : lastName
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : mediaMetaData
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : name
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : password
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : phoneNumber
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : provider
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : providerId
2023-11-11T15:59:18.441+0530 DEBUG Visiting attribute path : roles
2023-11-11T15:59:18.442+0530 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71806c64]
2023-11-11T15:59:18.443+0530 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e89a26]
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : roles.createdOn
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : roles.description
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : roles.isActive
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : roles.name
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : roles.updatedOn
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : updatedOn
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType
2023-11-11T15:59:18.443+0530 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1895e]
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType.createdOn
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType.deleteFlag
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType.deletedOn
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType.name
2023-11-11T15:59:18.443+0530 DEBUG Visiting attribute path : userType.updatedOn
2023-11-11T15:59:18.444+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.444+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.445+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.User)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.User, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.User)
          - CollectionAttributeFetchImpl(collection=com.minton.userservice.entities.User.roles, querySpaceUid=<gen:1>, path=com.minton.userservice.entities.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.minton.userservice.entities.Role, querySpaceUid=<gen:2>, path=com.minton.userservice.entities.User.roles.<elements>)
          - EntityAttributeFetchImpl(entity=com.minton.userservice.entities.UserType, querySpaceUid=<gen:3>, path=com.minton.userservice.entities.User.userType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.minton.userservice.entities.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.minton.userservice.entities.Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(userType)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.minton.userservice.entities.UserType)
                - SQL table alias mapping - usertype3_
                - alias suffix - 3_
                - suffixed key columns - {id1_6_3_}

2023-11-11T15:59:18.445+0530 DEBUG Static select for entity com.minton.userservice.entities.User [NONE]: select user0_.id as id1_5_0_, user0_.created_on as created_2_5_0_, user0_.delete_flag as delete_f3_5_0_, user0_.deleted_on as deleted_4_5_0_, user0_.email as email5_5_0_, user0_.email_verified as email_ve6_5_0_, user0_.first_name as first_na7_5_0_, user0_.image_url as image_ur8_5_0_, user0_.is_active as is_activ9_5_0_, user0_.is_authenticated_from_social_media as is_auth10_5_0_, user0_.last_name as last_na11_5_0_, user0_.media_meta_data as media_m12_5_0_, user0_.name as name13_5_0_, user0_.password as passwor14_5_0_, user0_.phone_number as phone_n15_5_0_, user0_.provider as provide16_5_0_, user0_.provider_id as provide17_5_0_, user0_.updated_on as updated18_5_0_, user0_.user_type as user_ty19_5_0_, roles1_.user_id as user_id1_4_1_, role2_.id as role_id2_4_1_, role2_.id as id1_3_2_, role2_.created_on as created_2_3_2_, role2_.description as descript3_3_2_, role2_.is_active as is_activ4_3_2_, role2_.name as name5_3_2_, role2_.updated_on as updated_6_3_2_, usertype3_.id as id1_6_3_, usertype3_.created_on as created_2_6_3_, usertype3_.delete_flag as delete_f3_6_3_, usertype3_.deleted_on as deleted_4_6_3_, usertype3_.name as name5_6_3_, usertype3_.updated_on as updated_6_6_3_ from users user0_ left outer join user_role roles1_ on user0_.id=roles1_.user_id left outer join role role2_ on roles1_.role_id=role2_.id left outer join user_type usertype3_ on user0_.user_type=usertype3_.id where user0_.id=?
2023-11-11T15:59:18.445+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.Group
2023-11-11T15:59:18.445+0530 DEBUG  Version select: select id from groups_tbl where id =?
2023-11-11T15:59:18.445+0530 DEBUG  Snapshot select: select group_.id, group_.created_by as created_2_2_, group_.group_name as group_na4_2_, group_.is_active as is_activ5_2_, group_.modified_at as modified6_2_, group_.modified_by as modified7_2_ from groups_tbl group_ where group_.id=?
2023-11-11T15:59:18.445+0530 DEBUG  Insert 0: insert into groups_tbl (created_by, created_on, group_name, is_active, modified_at, modified_by, id) values (?, ?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.445+0530 DEBUG  Update 0: update groups_tbl set created_by=?, group_name=?, is_active=?, modified_at=?, modified_by=? where id=?
2023-11-11T15:59:18.445+0530 DEBUG  Delete 0: delete from groups_tbl where id=?
2023-11-11T15:59:18.445+0530 DEBUG  Identity insert: insert into groups_tbl (created_by, created_on, group_name, is_active, modified_at, modified_by) values (?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.445+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1e38ab]
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : createdBy
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : createdOn
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : groupName
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : isActive
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : modifiedAt
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : modifiedBy
2023-11-11T15:59:18.445+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.445+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.445+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.Group)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.Group, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.Group)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2023-11-11T15:59:18.445+0530 DEBUG Static select for entity com.minton.userservice.entities.Group [NONE]: select group0_.id as id1_2_0_, group0_.created_by as created_2_2_0_, group0_.created_on as created_3_2_0_, group0_.group_name as group_na4_2_0_, group0_.is_active as is_activ5_2_0_, group0_.modified_at as modified6_2_0_, group0_.modified_by as modified7_2_0_ from groups_tbl group0_ where group0_.id=?
2023-11-11T15:59:18.445+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.GroupContacts
2023-11-11T15:59:18.445+0530 DEBUG  Version select: select id from group_contacts where id =?
2023-11-11T15:59:18.445+0530 DEBUG  Snapshot select: select groupconta_.id, groupconta_.contacts_id as contacts2_1_, groupconta_.group_id as group_id3_1_ from group_contacts groupconta_ where groupconta_.id=?
2023-11-11T15:59:18.445+0530 DEBUG  Insert 0: insert into group_contacts (contacts_id, group_id, id) values (?, ?, ?)
2023-11-11T15:59:18.445+0530 DEBUG  Update 0: update group_contacts set contacts_id=?, group_id=? where id=?
2023-11-11T15:59:18.445+0530 DEBUG  Delete 0: delete from group_contacts where id=?
2023-11-11T15:59:18.445+0530 DEBUG  Identity insert: insert into group_contacts (contacts_id, group_id) values (?, ?)
2023-11-11T15:59:18.445+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d1c30]
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts
2023-11-11T15:59:18.445+0530 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50aa9a91]
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.city
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.contactNumber
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.country
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.courseDate
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.courseName
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.createdAt
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.createdBy
2023-11-11T15:59:18.445+0530 DEBUG Visiting attribute path : contacts.currentCompany
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.currentPosition
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.dob
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.faceBookId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.fieldOfInterest
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.firstName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.instagramId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.isActive
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.lastName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.linkedInId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.modifiedAt
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.modifiedBy
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.primaryEmail
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.primaryNumber
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.secondaryEmail
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.secondaryNumber
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contacts.state
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group
2023-11-11T15:59:18.446+0530 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efa7d2f]
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.createdBy
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.createdOn
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.groupName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.isActive
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.modifiedAt
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : group.modifiedBy
2023-11-11T15:59:18.446+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.446+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.446+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.GroupContacts)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.GroupContacts, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.GroupContacts)
          - EntityAttributeFetchImpl(entity=com.minton.userservice.entities.Contact, querySpaceUid=<gen:1>, path=com.minton.userservice.entities.GroupContacts.contacts)
          - EntityAttributeFetchImpl(entity=com.minton.userservice.entities.Group, querySpaceUid=<gen:2>, path=com.minton.userservice.entities.GroupContacts.group)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.GroupContacts)
          - SQL table alias mapping - groupconta0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(contacts)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.minton.userservice.entities.Contact)
                - SQL table alias mapping - contact1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.minton.userservice.entities.Group)
                - SQL table alias mapping - group2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

2023-11-11T15:59:18.446+0530 DEBUG Static select for entity com.minton.userservice.entities.GroupContacts [NONE]: select groupconta0_.id as id1_1_0_, groupconta0_.contacts_id as contacts2_1_0_, groupconta0_.group_id as group_id3_1_0_, contact1_.id as id1_0_1_, contact1_.city as city2_0_1_, contact1_.contact_number as contact_3_0_1_, contact1_.country as country4_0_1_, contact1_.course_date as course_d5_0_1_, contact1_.course_name as course_n6_0_1_, contact1_.created_at as created_7_0_1_, contact1_.created_by as created_8_0_1_, contact1_.current_company as current_9_0_1_, contact1_.current_position as current10_0_1_, contact1_.dob as dob11_0_1_, contact1_.face_book_id as face_bo12_0_1_, contact1_.field_of_interest as field_o13_0_1_, contact1_.first_name as first_n14_0_1_, contact1_.instagram_id as instagr15_0_1_, contact1_.is_active as is_acti16_0_1_, contact1_.last_name as last_na17_0_1_, contact1_.linked_in_id as linked_18_0_1_, contact1_.modified_at as modifie19_0_1_, contact1_.modified_by as modifie20_0_1_, contact1_.primary_email as primary21_0_1_, contact1_.primary_number as primary22_0_1_, contact1_.secondary_email as seconda23_0_1_, contact1_.secondary_number as seconda24_0_1_, contact1_.state as state25_0_1_, group2_.id as id1_2_2_, group2_.created_by as created_2_2_2_, group2_.created_on as created_3_2_2_, group2_.group_name as group_na4_2_2_, group2_.is_active as is_activ5_2_2_, group2_.modified_at as modified6_2_2_, group2_.modified_by as modified7_2_2_ from group_contacts groupconta0_ left outer join contact contact1_ on groupconta0_.contacts_id=contact1_.id left outer join groups_tbl group2_ on groupconta0_.group_id=group2_.id where groupconta0_.id=?
2023-11-11T15:59:18.446+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.Contact
2023-11-11T15:59:18.446+0530 DEBUG  Version select: select id from contact where id =?
2023-11-11T15:59:18.446+0530 DEBUG  Snapshot select: select contact_.id, contact_.city as city2_0_, contact_.contact_number as contact_3_0_, contact_.country as country4_0_, contact_.course_date as course_d5_0_, contact_.course_name as course_n6_0_, contact_.created_at as created_7_0_, contact_.created_by as created_8_0_, contact_.current_company as current_9_0_, contact_.current_position as current10_0_, contact_.dob as dob11_0_, contact_.face_book_id as face_bo12_0_, contact_.field_of_interest as field_o13_0_, contact_.first_name as first_n14_0_, contact_.instagram_id as instagr15_0_, contact_.is_active as is_acti16_0_, contact_.last_name as last_na17_0_, contact_.linked_in_id as linked_18_0_, contact_.modified_at as modifie19_0_, contact_.modified_by as modifie20_0_, contact_.primary_email as primary21_0_, contact_.primary_number as primary22_0_, contact_.secondary_email as seconda23_0_, contact_.secondary_number as seconda24_0_, contact_.state as state25_0_ from contact contact_ where contact_.id=?
2023-11-11T15:59:18.446+0530 DEBUG  Insert 0: insert into contact (city, contact_number, country, course_date, course_name, created_at, created_by, current_company, current_position, dob, face_book_id, field_of_interest, first_name, instagram_id, is_active, last_name, linked_in_id, modified_at, modified_by, primary_email, primary_number, secondary_email, secondary_number, state, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.446+0530 DEBUG  Update 0: update contact set city=?, contact_number=?, country=?, course_date=?, course_name=?, created_at=?, created_by=?, current_company=?, current_position=?, dob=?, face_book_id=?, field_of_interest=?, first_name=?, instagram_id=?, is_active=?, last_name=?, linked_in_id=?, modified_at=?, modified_by=?, primary_email=?, primary_number=?, secondary_email=?, secondary_number=?, state=? where id=?
2023-11-11T15:59:18.446+0530 DEBUG  Delete 0: delete from contact where id=?
2023-11-11T15:59:18.446+0530 DEBUG  Identity insert: insert into contact (city, contact_number, country, course_date, course_name, created_at, created_by, current_company, current_position, dob, face_book_id, field_of_interest, first_name, instagram_id, is_active, last_name, linked_in_id, modified_at, modified_by, primary_email, primary_number, secondary_email, secondary_number, state) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.446+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2041c9a3]
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : city
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : contactNumber
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : country
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : courseDate
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : courseName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : createdAt
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : createdBy
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : currentCompany
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : currentPosition
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : dob
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : faceBookId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : fieldOfInterest
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : firstName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : instagramId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : isActive
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : lastName
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : linkedInId
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : modifiedAt
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : modifiedBy
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : primaryEmail
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : primaryNumber
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : secondaryEmail
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : secondaryNumber
2023-11-11T15:59:18.446+0530 DEBUG Visiting attribute path : state
2023-11-11T15:59:18.446+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.446+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.446+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.Contact)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.Contact, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.Contact)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.Contact)
          - SQL table alias mapping - contact0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2023-11-11T15:59:18.446+0530 DEBUG Static select for entity com.minton.userservice.entities.Contact [NONE]: select contact0_.id as id1_0_0_, contact0_.city as city2_0_0_, contact0_.contact_number as contact_3_0_0_, contact0_.country as country4_0_0_, contact0_.course_date as course_d5_0_0_, contact0_.course_name as course_n6_0_0_, contact0_.created_at as created_7_0_0_, contact0_.created_by as created_8_0_0_, contact0_.current_company as current_9_0_0_, contact0_.current_position as current10_0_0_, contact0_.dob as dob11_0_0_, contact0_.face_book_id as face_bo12_0_0_, contact0_.field_of_interest as field_o13_0_0_, contact0_.first_name as first_n14_0_0_, contact0_.instagram_id as instagr15_0_0_, contact0_.is_active as is_acti16_0_0_, contact0_.last_name as last_na17_0_0_, contact0_.linked_in_id as linked_18_0_0_, contact0_.modified_at as modifie19_0_0_, contact0_.modified_by as modifie20_0_0_, contact0_.primary_email as primary21_0_0_, contact0_.primary_number as primary22_0_0_, contact0_.secondary_email as seconda23_0_0_, contact0_.secondary_number as seconda24_0_0_, contact0_.state as state25_0_0_ from contact contact0_ where contact0_.id=?
2023-11-11T15:59:18.447+0530 DEBUG Static SQL for entity: com.minton.userservice.entities.Role
2023-11-11T15:59:18.447+0530 DEBUG  Version select: select id from role where id =?
2023-11-11T15:59:18.447+0530 DEBUG  Snapshot select: select role_.id, role_.description as descript3_3_, role_.is_active as is_activ4_3_, role_.name as name5_3_, role_.updated_on as updated_6_3_ from role role_ where role_.id=?
2023-11-11T15:59:18.447+0530 DEBUG  Insert 0: insert into role (created_on, description, is_active, name, updated_on, id) values (?, ?, ?, ?, ?, ?)
2023-11-11T15:59:18.447+0530 DEBUG  Update 0: update role set description=?, is_active=?, name=?, updated_on=? where id=?
2023-11-11T15:59:18.447+0530 DEBUG  Delete 0: delete from role where id=?
2023-11-11T15:59:18.447+0530 DEBUG  Identity insert: insert into role (created_on, description, is_active, name, updated_on) values (?, ?, ?, ?, ?)
2023-11-11T15:59:18.447+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bed5828]
2023-11-11T15:59:18.447+0530 DEBUG Visiting attribute path : createdOn
2023-11-11T15:59:18.447+0530 DEBUG Visiting attribute path : description
2023-11-11T15:59:18.447+0530 DEBUG Visiting attribute path : isActive
2023-11-11T15:59:18.447+0530 DEBUG Visiting attribute path : name
2023-11-11T15:59:18.447+0530 DEBUG Visiting attribute path : updatedOn
2023-11-11T15:59:18.447+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.447+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.447+0530 DEBUG LoadPlan(entity=com.minton.userservice.entities.Role)
    - Returns
       - EntityReturnImpl(entity=com.minton.userservice.entities.Role, querySpaceUid=<gen:0>, path=com.minton.userservice.entities.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.minton.userservice.entities.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2023-11-11T15:59:18.447+0530 DEBUG Static select for entity com.minton.userservice.entities.Role [NONE]: select role0_.id as id1_3_0_, role0_.created_on as created_2_3_0_, role0_.description as descript3_3_0_, role0_.is_active as is_activ4_3_0_, role0_.name as name5_3_0_, role0_.updated_on as updated_6_3_0_ from role role0_ where role0_.id=?
2023-11-11T15:59:18.448+0530 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28d97205]
2023-11-11T15:59:18.448+0530 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e58b0f6]
2023-11-11T15:59:18.448+0530 DEBUG Visiting attribute path : createdOn
2023-11-11T15:59:18.448+0530 DEBUG Visiting attribute path : description
2023-11-11T15:59:18.448+0530 DEBUG Visiting attribute path : isActive
2023-11-11T15:59:18.448+0530 DEBUG Visiting attribute path : name
2023-11-11T15:59:18.448+0530 DEBUG Visiting attribute path : updatedOn
2023-11-11T15:59:18.448+0530 DEBUG Building LoadPlan...
2023-11-11T15:59:18.449+0530 DEBUG processing queryspace <gen:0>
2023-11-11T15:59:18.449+0530 DEBUG LoadPlan(collection=com.minton.userservice.entities.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.minton.userservice.entities.User.roles, querySpaceUid=<gen:0>, path=[com.minton.userservice.entities.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.minton.userservice.entities.Role, querySpaceUid=<gen:1>, path=[com.minton.userservice.entities.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.minton.userservice.entities.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.minton.userservice.entities.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2023-11-11T15:59:18.449+0530 DEBUG Static select for collection com.minton.userservice.entities.User.roles: select roles0_.user_id as user_id1_4_0_, roles0_.role_id as role_id2_4_0_, role1_.id as id1_3_1_, role1_.created_on as created_2_3_1_, role1_.description as descript3_3_1_, role1_.is_active as is_activ4_3_1_, role1_.name as name5_3_1_, role1_.updated_on as updated_6_3_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2023-11-11T15:59:18.485+0530 DEBUG create table contact (id bigint not null auto_increment, city varchar(255) not null, contact_number varchar(255), country varchar(255), course_date varchar(255), course_name varchar(255), created_at datetime(6), created_by varchar(255), current_company varchar(255), current_position varchar(255), dob varchar(255) not null, face_book_id varchar(255), field_of_interest varchar(255), first_name varchar(255) not null, instagram_id varchar(255), is_active boolean default true not null, last_name varchar(255) not null, linked_in_id varchar(255), modified_at datetime(6), modified_by varchar(255), primary_email varchar(255), primary_number varchar(255), secondary_email varchar(255), secondary_number varchar(255), state varchar(255), primary key (id)) engine=InnoDB
2023-11-11T15:59:18.499+0530 DEBUG create table group_contacts (id bigint not null auto_increment, contacts_id bigint, group_id bigint, primary key (id)) engine=InnoDB
2023-11-11T15:59:18.505+0530 DEBUG create table groups_tbl (id bigint not null auto_increment, created_by varchar(255), created_on datetime(6), group_name varchar(255) not null, is_active bit, modified_at datetime(6), modified_by varchar(255), primary key (id)) engine=InnoDB
2023-11-11T15:59:18.511+0530 DEBUG create table role (id bigint not null auto_increment, created_on datetime(6), description varchar(255), is_active bit not null, name varchar(255) not null, updated_on datetime(6), primary key (id)) engine=InnoDB
2023-11-11T15:59:18.514+0530 DEBUG create table user_role (user_id bigint not null, role_id bigint not null, primary key (user_id, role_id)) engine=InnoDB
2023-11-11T15:59:18.516+0530 DEBUG create table users (id bigint not null auto_increment, created_on datetime(6), delete_flag bit not null, deleted_on datetime(6), email varchar(50) not null, email_verified bit not null, first_name varchar(255), image_url varchar(255), is_active bit not null, is_authenticated_from_social_media bit not null, last_name varchar(255), media_meta_data varchar(255), name varchar(255) not null, password varchar(255), phone_number varchar(255), provider varchar(255) not null, provider_id varchar(255), updated_on datetime(6), user_type bigint, primary key (id)) engine=InnoDB
2023-11-11T15:59:18.520+0530 DEBUG create table user_type (id bigint not null auto_increment, created_on datetime(6), delete_flag bit not null, deleted_on datetime(6), name varchar(255), updated_on datetime(6), primary key (id)) engine=InnoDB
2023-11-11T15:59:18.523+0530 DEBUG alter table groups_tbl drop index UK_cog9fr39jkxgtooqnjq2jrpg6
2023-11-11T15:59:18.529+0530 DEBUG alter table groups_tbl add constraint UK_cog9fr39jkxgtooqnjq2jrpg6 unique (group_name)
2023-11-11T15:59:18.532+0530 DEBUG alter table role drop index UK_8sewwnpamngi6b1dwaa88askk
2023-11-11T15:59:18.532+0530 DEBUG alter table role add constraint UK_8sewwnpamngi6b1dwaa88askk unique (name)
2023-11-11T15:59:18.535+0530 DEBUG alter table users drop index UK_6dotkott2kjsp8vw4d0m25fb7
2023-11-11T15:59:18.536+0530 DEBUG alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2023-11-11T15:59:18.539+0530 DEBUG alter table group_contacts add constraint FKm5geue3hppybct8ouimter5tm foreign key (contacts_id) references contact (id)
2023-11-11T15:59:18.545+0530 DEBUG alter table group_contacts add constraint FKotmboqog9pnkug6isleohm0l9 foreign key (group_id) references groups_tbl (id)
2023-11-11T15:59:18.553+0530 DEBUG alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2023-11-11T15:59:18.559+0530 DEBUG alter table user_role add constraint FKj345gk1bovqvfame88rcx7yyx foreign key (user_id) references users (id)
2023-11-11T15:59:18.566+0530 DEBUG alter table users add constraint FKas1xh9ffcl617omqb321ivj67 foreign key (user_type) references user_type (id)
2023-11-11T15:59:18.575+0530 INFO HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-11T15:59:18.576+0530 DEBUG Checking 0 named HQL queries
2023-11-11T15:59:18.576+0530 DEBUG Checking 0 named SQL queries
2023-11-11T15:59:18.583+0530 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-11T15:59:18.585+0530 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71c91121
2023-11-11T15:59:18.585+0530 DEBUG Registering SessionFactory: bf7e95a0-ce42-4417-9966-6aa86d152106 (<unnamed>)
2023-11-11T15:59:18.585+0530 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-11T15:59:18.699+0530 DEBUG Statistics initialized [enabled=false]
2023-11-11T15:59:18.760+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.781+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.786+0530 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@10264cb0
2023-11-11T15:59:18.795+0530 DEBUG parse() - HQL: select u from com.minton.userservice.entities.User u where u.email=:email and u.provider = :provider
2023-11-11T15:59:18.797+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.799+0530 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'minton'
    |  |     |  |  |  \-[IDENT] Node: 'userservice'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'email'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'email'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'provider'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'provider'

2023-11-11T15:59:18.807+0530 DEBUG select << begin [level=1, statement=select]
2023-11-11T15:59:18.811+0530 DEBUG FromClause{level=1} : com.minton.userservice.entities.User (u) -> user0_
2023-11-11T15:59:18.812+0530 DEBUG Resolved : u -> user0_.id
2023-11-11T15:59:18.813+0530 DEBUG Resolved : u -> user0_.id
2023-11-11T15:59:18.813+0530 DEBUG getDataType() : email -> org.hibernate.type.StringType@7cdc4070
2023-11-11T15:59:18.813+0530 DEBUG Resolved : u.email -> user0_.email
2023-11-11T15:59:18.814+0530 DEBUG Resolved : u -> user0_.id
2023-11-11T15:59:18.814+0530 DEBUG getDataType() : provider -> org.hibernate.type.CustomType@7fb2645b
2023-11-11T15:59:18.814+0530 DEBUG Resolved : u.provider -> user0_.provider
2023-11-11T15:59:18.814+0530 DEBUG select : finishing up [level=1, statement=select]
2023-11-11T15:59:18.814+0530 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) ( where ( and ( = ( user0_.email user0_.id email ) ? ) ( = ( user0_.provider user0_.id provider ) ? ) ) ) )
2023-11-11T15:59:18.816+0530 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.User)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.User)
          |  | path: u.email
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.User)
          |  |  | originalText: u
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: email
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.minton.userservice.entities.User)
             | path: u.provider
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.User)
             |  | originalText: u
             |  \-IdentNode
             |    persister: null
             |    originalText: provider
             \-ParameterNode

2023-11-11T15:59:18.817+0530 DEBUG Using FROM fragment [users user0_]
2023-11-11T15:59:18.817+0530 DEBUG select >> end [level=1, statement=select]
2023-11-11T15:59:18.817+0530 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_5_' {alias=u, className=com.minton.userservice.entities.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.created_on as created_2_5_, user0_.delete_flag as delete_f3_5_, user0_.deleted_on as deleted_4_5_, user0_.email as email5_5_, user0_.email_verified as email_ve6_5_, user0_.first_name as first_na7_5_, user0_.image_url as image_ur8_5_, user0_.is_active as is_activ9_5_, user0_.is_authenticated_from_social_media as is_auth10_5_, user0_.last_name as last_na11_5_, user0_.media_meta_data as media_m12_5_, user0_.name as name13_5_, user0_.password as passwor14_5_, user0_.phone_number as phone_n15_5_, user0_.provider as provide16_5_, user0_.provider_id as provide17_5_, user0_.updated_on as updated18_5_, user0_.user_type as user_ty19_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.minton.userservice.entities.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=com.minton.userservice.entities.User,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=com.minton.userservice.entities.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@7cdc4070}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.provider' {propertyName=provider,dereferenceType=PRIMITIVE,getPropertyPath=provider,path=u.provider,tableAlias=user0_,className=com.minton.userservice.entities.User,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=com.minton.userservice.entities.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'provider' {originalText=provider}
             \-[NAMED_PARAM] ParameterNode: '?' {name=provider, expectedType=org.hibernate.type.CustomType@7fb2645b}

2023-11-11T15:59:18.817+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.819+0530 DEBUG HQL: select u from com.minton.userservice.entities.User u where u.email=:email and u.provider = :provider
2023-11-11T15:59:18.819+0530 DEBUG SQL: select user0_.id as id1_5_, user0_.created_on as created_2_5_, user0_.delete_flag as delete_f3_5_, user0_.deleted_on as deleted_4_5_, user0_.email as email5_5_, user0_.email_verified as email_ve6_5_, user0_.first_name as first_na7_5_, user0_.image_url as image_ur8_5_, user0_.is_active as is_activ9_5_, user0_.is_authenticated_from_social_media as is_auth10_5_, user0_.last_name as last_na11_5_, user0_.media_meta_data as media_m12_5_, user0_.name as name13_5_, user0_.password as passwor14_5_, user0_.phone_number as phone_n15_5_, user0_.provider as provide16_5_, user0_.provider_id as provide17_5_, user0_.updated_on as updated18_5_, user0_.user_type as user_ty19_5_ from users user0_ where user0_.email=? and user0_.provider=?
2023-11-11T15:59:18.819+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.823+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.824+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.825+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.825+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.853+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.872+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.872+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.955+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.956+0530 DEBUG parse() - HQL: SELECT c from com.minton.userservice.entities.Contact c where c.isActive = true and c.id in :contactIds
2023-11-11T15:59:18.956+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.956+0530 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'minton'
    |  |     |  |  |  \-[IDENT] Node: 'userservice'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Contact'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'isActive'
          |  \-[TRUE] Node: 'true'
          \-[IN] Node: 'in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'c'
             |  \-[IDENT] Node: 'id'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'contactIds'

2023-11-11T15:59:18.956+0530 DEBUG select << begin [level=1, statement=select]
2023-11-11T15:59:18.956+0530 DEBUG FromClause{level=1} : com.minton.userservice.entities.Contact (c) -> contact0_
2023-11-11T15:59:18.956+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.956+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.957+0530 DEBUG getDataType() : isActive -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:18.957+0530 DEBUG Resolved : c.isActive -> contact0_.is_active
2023-11-11T15:59:18.957+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.957+0530 DEBUG getDataType() : id -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:18.957+0530 DEBUG Resolved : c.id -> contact0_.id
2023-11-11T15:59:18.958+0530 DEBUG select : finishing up [level=1, statement=select]
2023-11-11T15:59:18.958+0530 DEBUG processQuery() :  ( SELECT ( {select clause} contact0_.id ) ( FromClause{level=1} contact contact0_ ) ( where ( and ( = ( contact0_.is_active contact0_.id isActive ) true ) ( in ( contact0_.id contact0_.id id ) ( inList ? ) ) ) ) )
2023-11-11T15:59:18.958+0530 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Contact): [contact]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
    |  | originalText: c
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
          |  | path: c.isActive
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
          |  |  | originalText: c
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: isActive
          |  \-BooleanLiteralNode
          \-InLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
             | path: c.id
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
             |  | originalText: c
             |  \-IdentNode
             |    persister: null
             |    originalText: id
             \-SqlNode
                \-ParameterNode

2023-11-11T15:59:18.958+0530 DEBUG Using FROM fragment [contact contact0_]
2023-11-11T15:59:18.958+0530 DEBUG select >> end [level=1, statement=select]
2023-11-11T15:59:18.958+0530 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.id as id1_0_' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.city as city2_0_, contact0_.contact_number as contact_3_0_, contact0_.country as country4_0_, contact0_.course_date as course_d5_0_, contact0_.course_name as course_n6_0_, contact0_.created_at as created_7_0_, contact0_.created_by as created_8_0_, contact0_.current_company as current_9_0_, contact0_.current_position as current10_0_, contact0_.dob as dob11_0_, contact0_.face_book_id as face_bo12_0_, contact0_.field_of_interest as field_o13_0_, contact0_.first_name as first_n14_0_, contact0_.instagram_id as instagr15_0_, contact0_.is_active as is_acti16_0_, contact0_.last_name as last_na17_0_, contact0_.linked_in_id as linked_18_0_, contact0_.modified_at as modifie19_0_, contact0_.modified_by as modifie20_0_, contact0_.primary_email as primary21_0_, contact0_.primary_number as primary22_0_, contact0_.secondary_email as seconda23_0_, contact0_.secondary_number as seconda24_0_, contact0_.state as state25_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=contact,tableAlias=contact0_,origin=null,columns={,className=com.minton.userservice.entities.Contact}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'contact0_.is_active' {propertyName=isActive,dereferenceType=PRIMITIVE,getPropertyPath=isActive,path=c.isActive,tableAlias=contact0_,className=com.minton.userservice.entities.Contact,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'contact0_.id' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
          |  |  \-[IDENT] IdentNode: 'isActive' {originalText=isActive}
          |  \-[TRUE] BooleanLiteralNode: 'true'
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'contact0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=c.id,tableAlias=contact0_,className=com.minton.userservice.entities.Contact,classAlias=c}
             |  +-[ALIAS_REF] IdentNode: 'contact0_.id' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NAMED_PARAM] ParameterNode: '?' {name=contactIds, expectedType=org.hibernate.type.LongType@5fc1e4fb}

2023-11-11T15:59:18.958+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.959+0530 DEBUG HQL: SELECT c from com.minton.userservice.entities.Contact c where c.isActive = true and c.id in :contactIds
2023-11-11T15:59:18.959+0530 DEBUG SQL: select contact0_.id as id1_0_, contact0_.city as city2_0_, contact0_.contact_number as contact_3_0_, contact0_.country as country4_0_, contact0_.course_date as course_d5_0_, contact0_.course_name as course_n6_0_, contact0_.created_at as created_7_0_, contact0_.created_by as created_8_0_, contact0_.current_company as current_9_0_, contact0_.current_position as current10_0_, contact0_.dob as dob11_0_, contact0_.face_book_id as face_bo12_0_, contact0_.field_of_interest as field_o13_0_, contact0_.first_name as first_n14_0_, contact0_.instagram_id as instagr15_0_, contact0_.is_active as is_acti16_0_, contact0_.last_name as last_na17_0_, contact0_.linked_in_id as linked_18_0_, contact0_.modified_at as modifie19_0_, contact0_.modified_by as modifie20_0_, contact0_.primary_email as primary21_0_, contact0_.primary_number as primary22_0_, contact0_.secondary_email as seconda23_0_, contact0_.secondary_number as seconda24_0_, contact0_.state as state25_0_ from contact contact0_ where contact0_.is_active=1 and (contact0_.id in (?))
2023-11-11T15:59:18.959+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.959+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.960+0530 DEBUG parse() - HQL: select c from com.minton.userservice.entities.Contact c where c.id=:id and c.isActive = true
2023-11-11T15:59:18.960+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.960+0530 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'minton'
    |  |     |  |  |  \-[IDENT] Node: 'userservice'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Contact'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'id'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'c'
             |  \-[IDENT] Node: 'isActive'
             \-[TRUE] Node: 'true'

2023-11-11T15:59:18.960+0530 DEBUG select << begin [level=1, statement=select]
2023-11-11T15:59:18.960+0530 DEBUG FromClause{level=1} : com.minton.userservice.entities.Contact (c) -> contact0_
2023-11-11T15:59:18.960+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.960+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.960+0530 DEBUG getDataType() : id -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:18.960+0530 DEBUG Resolved : c.id -> contact0_.id
2023-11-11T15:59:18.960+0530 DEBUG Resolved : c -> contact0_.id
2023-11-11T15:59:18.960+0530 DEBUG getDataType() : isActive -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:18.960+0530 DEBUG Resolved : c.isActive -> contact0_.is_active
2023-11-11T15:59:18.960+0530 DEBUG select : finishing up [level=1, statement=select]
2023-11-11T15:59:18.960+0530 DEBUG processQuery() :  ( SELECT ( {select clause} contact0_.id ) ( FromClause{level=1} contact contact0_ ) ( where ( and ( = ( contact0_.id contact0_.id id ) ? ) ( = ( contact0_.is_active contact0_.id isActive ) true ) ) ) )
2023-11-11T15:59:18.961+0530 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Contact): [contact]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
    |  | originalText: c
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
          |  | path: c.id
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
          |  |  | originalText: c
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: id
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
             | path: c.isActive
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Contact)
             |  | originalText: c
             |  \-IdentNode
             |    persister: null
             |    originalText: isActive
             \-BooleanLiteralNode

2023-11-11T15:59:18.961+0530 DEBUG Using FROM fragment [contact contact0_]
2023-11-11T15:59:18.961+0530 DEBUG select >> end [level=1, statement=select]
2023-11-11T15:59:18.961+0530 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.id as id1_0_' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.city as city2_0_, contact0_.contact_number as contact_3_0_, contact0_.country as country4_0_, contact0_.course_date as course_d5_0_, contact0_.course_name as course_n6_0_, contact0_.created_at as created_7_0_, contact0_.created_by as created_8_0_, contact0_.current_company as current_9_0_, contact0_.current_position as current10_0_, contact0_.dob as dob11_0_, contact0_.face_book_id as face_bo12_0_, contact0_.field_of_interest as field_o13_0_, contact0_.first_name as first_n14_0_, contact0_.instagram_id as instagr15_0_, contact0_.is_active as is_acti16_0_, contact0_.last_name as last_na17_0_, contact0_.linked_in_id as linked_18_0_, contact0_.modified_at as modifie19_0_, contact0_.modified_by as modifie20_0_, contact0_.primary_email as primary21_0_, contact0_.primary_number as primary22_0_, contact0_.secondary_email as seconda23_0_, contact0_.secondary_number as seconda24_0_, contact0_.state as state25_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=contact,tableAlias=contact0_,origin=null,columns={,className=com.minton.userservice.entities.Contact}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'contact0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=c.id,tableAlias=contact0_,className=com.minton.userservice.entities.Contact,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'contact0_.id' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@5fc1e4fb}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'contact0_.is_active' {propertyName=isActive,dereferenceType=PRIMITIVE,getPropertyPath=isActive,path=c.isActive,tableAlias=contact0_,className=com.minton.userservice.entities.Contact,classAlias=c}
             |  +-[ALIAS_REF] IdentNode: 'contact0_.id' {alias=c, className=com.minton.userservice.entities.Contact, tableAlias=contact0_}
             |  \-[IDENT] IdentNode: 'isActive' {originalText=isActive}
             \-[TRUE] BooleanLiteralNode: 'true'

2023-11-11T15:59:18.961+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.961+0530 DEBUG HQL: select c from com.minton.userservice.entities.Contact c where c.id=:id and c.isActive = true
2023-11-11T15:59:18.961+0530 DEBUG SQL: select contact0_.id as id1_0_, contact0_.city as city2_0_, contact0_.contact_number as contact_3_0_, contact0_.country as country4_0_, contact0_.course_date as course_d5_0_, contact0_.course_name as course_n6_0_, contact0_.created_at as created_7_0_, contact0_.created_by as created_8_0_, contact0_.current_company as current_9_0_, contact0_.current_position as current10_0_, contact0_.dob as dob11_0_, contact0_.face_book_id as face_bo12_0_, contact0_.field_of_interest as field_o13_0_, contact0_.first_name as first_n14_0_, contact0_.instagram_id as instagr15_0_, contact0_.is_active as is_acti16_0_, contact0_.last_name as last_na17_0_, contact0_.linked_in_id as linked_18_0_, contact0_.modified_at as modifie19_0_, contact0_.modified_by as modifie20_0_, contact0_.primary_email as primary21_0_, contact0_.primary_number as primary22_0_, contact0_.secondary_email as seconda23_0_, contact0_.secondary_number as seconda24_0_, contact0_.state as state25_0_ from contact contact0_ where contact0_.id=? and contact0_.is_active=1
2023-11-11T15:59:18.961+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.980+0530 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-11T15:59:18.980+0530 DEBUG parse() - HQL: select g from com.minton.userservice.entities.Group g where g.id=:id and g.isActive = true
2023-11-11T15:59:18.980+0530 DEBUG weakKeywords() : new LT(1) token - ["Group",<111> previously: <25>,line=1,col=47,possibleID=true]
2023-11-11T15:59:18.980+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.981+0530 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'minton'
    |  |     |  |  |  \-[IDENT] Node: 'userservice'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Group'
    |  |     \-[ALIAS] Node: 'g'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'g'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'g'
          |  |  \-[IDENT] Node: 'id'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'id'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'g'
             |  \-[IDENT] Node: 'isActive'
             \-[TRUE] Node: 'true'

2023-11-11T15:59:18.981+0530 DEBUG select << begin [level=1, statement=select]
2023-11-11T15:59:18.981+0530 DEBUG FromClause{level=1} : com.minton.userservice.entities.Group (g) -> group0_
2023-11-11T15:59:18.981+0530 DEBUG Resolved : g -> group0_.id
2023-11-11T15:59:18.981+0530 DEBUG Resolved : g -> group0_.id
2023-11-11T15:59:18.981+0530 DEBUG getDataType() : id -> org.hibernate.type.LongType@5fc1e4fb
2023-11-11T15:59:18.981+0530 DEBUG Resolved : g.id -> group0_.id
2023-11-11T15:59:18.981+0530 DEBUG Resolved : g -> group0_.id
2023-11-11T15:59:18.981+0530 DEBUG getDataType() : isActive -> org.hibernate.type.BooleanType@3fe8ad3f
2023-11-11T15:59:18.981+0530 DEBUG Resolved : g.isActive -> group0_.is_active
2023-11-11T15:59:18.981+0530 DEBUG select : finishing up [level=1, statement=select]
2023-11-11T15:59:18.981+0530 DEBUG processQuery() :  ( SELECT ( {select clause} group0_.id ) ( FromClause{level=1} groups_tbl group0_ ) ( where ( and ( = ( group0_.id group0_.id id ) ? ) ( = ( group0_.is_active group0_.id isActive ) true ) ) ) )
2023-11-11T15:59:18.981+0530 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Group): [groups_tbl]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Group)
    |  | originalText: g
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Group)
          |  | path: g.id
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Group)
          |  |  | originalText: g
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: id
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.minton.userservice.entities.Group)
             | path: g.isActive
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.minton.userservice.entities.Group)
             |  | originalText: g
             |  \-IdentNode
             |    persister: null
             |    originalText: isActive
             \-BooleanLiteralNode

2023-11-11T15:59:18.981+0530 DEBUG Using FROM fragment [groups_tbl group0_]
2023-11-11T15:59:18.982+0530 DEBUG select >> end [level=1, statement=select]
2023-11-11T15:59:18.982+0530 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (groups_tbl)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'group0_.id as id1_2_' {alias=g, className=com.minton.userservice.entities.Group, tableAlias=group0_}
    |  \-[SQL_TOKEN] SqlFragment: 'group0_.created_by as created_2_2_, group0_.created_on as created_3_2_, group0_.group_name as group_na4_2_, group0_.is_active as is_activ5_2_, group0_.modified_at as modified6_2_, group0_.modified_by as modified7_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[g], fromElementByTableAlias=[group0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'groups_tbl group0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=g,role=null,tableName=groups_tbl,tableAlias=group0_,origin=null,columns={,className=com.minton.userservice.entities.Group}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'group0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=g.id,tableAlias=group0_,className=com.minton.userservice.entities.Group,classAlias=g}
          |  |  +-[ALIAS_REF] IdentNode: 'group0_.id' {alias=g, className=com.minton.userservice.entities.Group, tableAlias=group0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@5fc1e4fb}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'group0_.is_active' {propertyName=isActive,dereferenceType=PRIMITIVE,getPropertyPath=isActive,path=g.isActive,tableAlias=group0_,className=com.minton.userservice.entities.Group,classAlias=g}
             |  +-[ALIAS_REF] IdentNode: 'group0_.id' {alias=g, className=com.minton.userservice.entities.Group, tableAlias=group0_}
             |  \-[IDENT] IdentNode: 'isActive' {originalText=isActive}
             \-[TRUE] BooleanLiteralNode: 'true'

2023-11-11T15:59:18.982+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:18.982+0530 DEBUG HQL: select g from com.minton.userservice.entities.Group g where g.id=:id and g.isActive = true
2023-11-11T15:59:18.982+0530 DEBUG SQL: select group0_.id as id1_2_, group0_.created_by as created_2_2_, group0_.created_on as created_3_2_, group0_.group_name as group_na4_2_, group0_.is_active as is_activ5_2_, group0_.modified_at as modified6_2_, group0_.modified_by as modified7_2_ from groups_tbl group0_ where group0_.id=? and group0_.is_active=1
2023-11-11T15:59:18.982+0530 DEBUG throwQueryException() : no errors
2023-11-11T15:59:19.393+0530 DEBUG Loaded expression factory via original TCCL
2023-11-11T15:59:19.394+0530 DEBUG Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2023-11-11T15:59:19.394+0530 DEBUG Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2023-11-11T15:59:19.394+0530 DEBUG Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2023-11-11T15:59:19.394+0530 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2023-11-11T15:59:19.394+0530 DEBUG Trying to load META-INF/validation.xml via user class loader
2023-11-11T15:59:19.394+0530 DEBUG Trying to load META-INF/validation.xml via TCCL
2023-11-11T15:59:19.395+0530 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2023-11-11T15:59:19.395+0530 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2023-11-11T15:59:19.395+0530 DEBUG Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2023-11-11T15:59:19.395+0530 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2023-11-11T15:59:19.396+0530 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2023-11-11T15:59:19.396+0530 DEBUG HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2023-11-11T15:59:19.396+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2023-11-11T15:59:19.396+0530 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2023-11-11T15:59:19.396+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2023-11-11T15:59:19.396+0530 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2023-11-11T15:59:28.867+0530 DEBUG HHH000031: Closing
2023-11-11T15:59:28.867+0530 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c06c2a5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@579ce2e9]
2023-11-11T15:59:28.867+0530 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-11-11T15:59:28.868+0530 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
